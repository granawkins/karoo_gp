{
    "node_type": "<class 'karoo_gp.functions.Function'>",
    "tree_type": "f",
    "parent": null,
    "children": "[<Branch: <Function: symbol=/, type='arithmetic', arity=2>>, <Branch: <Function: symbol=/, type='arithmetic', arity=2>>]",
    "repr": "<Branch: <Function: symbol=/, type='arithmetic', arity=2>>",
    "parse": "((((((2)/(2))-((3)+(c)))+(((2)+(3))-((3)-(c))))/((((3)/(3))+((2)*(1)))/(((2)*(1))-((a)-(2)))))/(((((c)+(3))-((c)+(2)))*(((a)*(2))+((2)*(1))))/((((b)-(1))-((1)+(a)))+(((3)*(c))+((b)*(1))))))",
    "display": "                _____________/_______________               \n        ______/________               ______/________       \n     __+____        __/____        __*____        __+____   \n   -__     -__    +__     -__    -__     +__    -__     +__ \n /_  +_  +_  -_ /_  *_  *_  -_ +_  +_  *_  *_ -_  +_  *_  *_\n2 2 3 c 2 3 3 c3 3 2 1 2 1 a 2c 3 c 2 a 2 2 1b 1 1 a 3 c b 1\n",
    "depth": 5,
    "height": 0,
    "n_children": 62,
    "n_cols": 32,
    "second_child": "(((((c)+(3))-((c)+(2)))*(((a)*(2))+((2)*(1))))/((((b)-(1))-((1)+(a)))+(((3)*(c))+((b)*(1)))))",
    "set_child": "((((((2)/(2))-((3)+(c)))+(((2)+(3))-((3)-(c))))/((((3)/(3))+((2)*(1)))/(((2)*(1))-((a)-(2)))))/((a)+(b)))",
    "prune": "((1)/(b))"
}
