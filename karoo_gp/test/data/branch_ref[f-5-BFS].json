{"node_type": "<class 'karoo_gp.functions.Function'>", "tree_type": "f", "parent": null, "children": "[<Branch: <Function: symbol=*, type='arithmetic', arity=2>>, <Branch: <Function: symbol=/, type='arithmetic', arity=2>>]", "repr": "<Branch: <Function: symbol=+, type='arithmetic', arity=2>>", "parse": "(b)/(c)+(b)+(3)*(1)*(3)*(1)+(c)*(3)/(c)*(3)/(2)/(a)/(2)-(2)*(2)+(c)+(c)+(a)/(3)-(b)+(3)-(c)*(2)/(b)/(a)-(3)+(a)+(2)*(a)-(a)+(b)", "save": "((((((b)/(c))+((b)+(3)))*(((1)*(3))*((1)+(c))))*((((3)/(c))*((3)/(2)))/(((a)/(2))-((2)*(2)))))+(((((c)+(c))+((a)/(3)))-(((b)+(3))-((c)*(2))))/((((b)/(a))-((3)+(a)))+(((2)*(a))-((a)+(b))))))", "display": "                _____________+_______________               \n        ______*________               ______/________       \n     __*____        __/____        __-____        __+____   \n   +__     *__    *__     -__    +__     -__    -__     -__ \n /_  +_  *_  +_ /_  /_  /_  *_ +_  /_  +_  *_ /_  +_  *_  +_\nb c b 3 1 3 1 c3 c 3 2 a 2 2 2c c a 3 b 3 c 2b a 3 a 2 a a b\n", "depth": 5, "height": 0, "n_children": 62, "n_cols": 32, "second_child": "(((((c)+(c))+((a)/(3)))-(((b)+(3))-((c)*(2))))/((((b)/(a))-((3)+(a)))+(((2)*(a))-((a)+(b)))))", "set_child": "((((((b)/(c))+((b)+(3)))*(((1)*(3))*((1)+(c))))*((((3)/(c))*((3)/(2)))/(((a)/(2))-((2)*(2)))))+((a)+(b)))", "prune": "((2)+(2))"}